kafka.brokers=localhost:9092
schema.registry.url = http://localhost:8081

# producer properties
producer.topic=topicTest
key-serializer-class: org.apache.kafka.common.serialization.StringSerializer
serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer


# Consumer properties
consumer.topic=topicTest
consumer.group=group1
consumer.maxPollRecords=5000
consumer.consumersCount=1
key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
consumer.seekTo=beginning


##kafka configuration
#kafka:
#brokers: localhost:9092
#serializer-class: com.github.dariux2016.kafka.converter.MessageWrapperSerializer
#deserializer-class: com.github.dariux2016.kafka.converter.MessageWrapperDeserializer
#reconnect-backoff-ms: 2000
#max-block-ms: 5000
##kafka consumer-producer configs
#kafkaProducerConsumerProperties: ?brokers={{kafka.brokers}}&valueDeserializer={{kafka.deserializer-class}}&serializerClass={{kafka.serializer-class}}&maxBlockMs={{kafka.max-block-ms}}&reconnectBackoffMaxMs={{kafka.reconnect-backoff-ms}}
#
#kafka-uri-base: kafka:EXAMPLE-TOPIC

#kafka.bootstrap.servers = localhost:9092
#kafka.topic.avro = avro-topic
#kafka.topic.string = string-topic
#kafka.value.serializer = io.confluent.kafka.serializers.KafkaAvroSerializer
#kafka.value.deserializer = io.confluent.kafka.serializers.KafkaAvroDeserializer
#schema.registry.url = http://localhost:8081